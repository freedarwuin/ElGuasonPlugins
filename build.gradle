plugins {
    id 'java'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.8.1'
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            url = 'https://repo.runelite.net'
        }
        mavenCentral()
        jcenter()
    }

    def runeLiteVersion = '1.10.33.1'

    plugins.withType(JavaPlugin) {
        dependencies {
            compileOnly 'org.projectlombok:lombok:1.18.20'
            annotationProcessor 'org.projectlombok:lombok:1.18.20'
            compileOnly group: 'net.runelite', name: 'client', version: runeLiteVersion
            testImplementation 'junit:junit:4.12'
            testImplementation group: 'net.runelite', name: 'client', version: runeLiteVersion
            testImplementation group: 'net.runelite', name: 'jshell', version: runeLiteVersion
        }
    }
}

dependencies {
    //Importantes

    //implementation project(path: ':PiggyUtils')


    /*implementation 'io.reactivex.rxjava3:rxjava:3.1.6'

    implementation project(path: ':SixHourLog')
    implementation project(path: ':LoginModified')
    implementation project(path: ':discord-rare-drop-notificater')
    implementation project(path: ':DinkPlugin')
    implementation project(path: ':DialogueContinuer')
    //Plugins Free
    implementation project(path: ':AoeWarn')
    implementation project(path: ':AutoAerial')
    implementation project(path: ':AutoBoner')
    implementation project(path: ':AutoTrapper')
    implementation project(path: ':AutoSmith')
    implementation project(path: ':ButterflyCatcher')
    implementation project(path: ':Firemaking')
    implementation project(path: ':KittenFeeder')
    implementation project(path: ':AutoJugHumidifier')
    implementation project(path: ':E3T4G')
    //implementation project(path: ':EthansApi')
    implementation project(path: ':ChinBreakHandler')
    implementation project(path: ':Harpoon2Ticker')
    implementation project(path: ':ItemCombiner')
    implementation project(path: ':ItemDropper')
    implementation project(path: ':OneTickSwitcher')
    implementation project(path: ':PowerSkiller')
    implementation project(path: ':PrayerFlicker')
    implementation project(path: ':PrayAgainstPlayer')
    implementation project(path: ':RunEnabler')
    implementation project(path: ':ShiftClickWalker')

    implementation project(path: ':SpeedDartMaker')
    implementation project(path: ':SuperglassMake')
    implementation project(path: ':StrategyExample')
    implementation project(path: ':UpkeepPlugin')
    implementation project(path: ':DropParty')
    implementation project(path: ':BetterProfiles')
    implementation project(path: ':PathingTesting')
    implementation project(path: ':PiggyAutoCombat')
    implementation project(path: ':AutoChop')*/

    // Plugins Elite ff4d00
    implementation project(path: ':Discord-Level-Notifications')
    implementation project(path: ':AutoWintertodt')
    implementation project(path: ':AutoMLM')
    implementation project(path: ':AutoCrafting')
    implementation project(path: ':AutoHerblore')
    implementation project(path: ':AutoVorkath')
    implementation project(path: ':AutoWhispererPrayers')
    implementation project(path: ':RSNHider')
    implementation project(path: ':ScurriusSpines')
    implementation project(path: ':AutoNMZ')
    implementation project(path: ':GreenDrags')
    implementation project(path: ':BobTheBuilder') //Construccion
    implementation project(path: ':CluePuzzleSolver')
    implementation project(path: ':LeftClickBlackJack')
    implementation project(path: ':AutoChop')
    implementation project(path: ':AutoLeviathanPrayers')
    implementation project(path: ':bankmemory')
    implementation project(path: ':RooftopAgility')
    implementation project(path: ':AutoTitheFarm')
    implementation project(path: ':AutoRifts')
    implementation project(path: ":AutoRuneDragons")
    implementation project(path: ':AutoChompy')
    implementation project(path: ':HerbCleaner')
    implementation project(path: ':CalvarionHelper')
    implementation project(path: ':JadAutoPrayers')
    implementation project(path: ':GauntletFlicker')
    implementation project(path: ':AutoTele')
    implementation project(path: ':LavaRunecrafter')
    implementation project(path: ':VardorvisHelper')
    implementation project(path: ':NightmareHelper')
    implementation project(path: ':HideCast')
    implementation project(path: ':BobTheWizard')
    implementation project(path: ':LogoutHelper')
    //implementation project(path: ':inferno')
    //implementation project(path: ':nex')
    //implementation project(path: ':pluginloader')
    //implementation project(path: ':effecttimers')
    implementation project(path: ':AutoCombat')
    //implementation project(path: ':AutoScurrius')
    //implementation project(path: ':AutoPestControl')
    implementation project(path: ':AutoThiever')
    implementation project(path: ':AutoShopper')
    implementation project(path: ':AutoTeleTabs')
    implementation project(path: ':AutoMTA')
    implementation project(path: ':AutoMiner')
    implementation project(path: ':AutoMinnows')
    implementation project(path: ':AutoKarambwans')
    implementation project(path: ':K1Tick')
    implementation project(path: ':dancer')
    implementation project(path: ':tarnslair')
    implementation project(path: ':AutoRogues')
    implementation project(path: ':AutoCakeThiever')
    implementation project(path: ':AutoSandStone')
    implementation project(path: ':VolcanicAsh')
    implementation project(path: ':templetrekking')
    implementation project(path: ':AutoWarriorsGuild')
    implementation project(path: ':autosquirk')
    implementation project(path: ':autocannonballer')
    implementation project(path: ':AutoAlcher')
    implementation project(path: ':AutoGemMiner')
    implementation project(path: ':AerialFishing')
    implementation project(path: ':AutoChopper')
    implementation project(path: ':AutoPohPrayer')

}

sourceSets {

    main {

        java {
            srcDir "src"
        }

    }
}

group = 'com.piggyplugins'
//version = 'free'
//version = 'CMS MrTunTun'
//version = 'Drack2000'
//version = 'Dsnayker'
//version = 'KillerPks Rv'
//version = 'Paco'
//version = 'R@nM$e$'
//version = 'vojatajay' //NO
//version = 'Rigby'
//version = 'Clonazpm' //
//version = 'wuendis .p' // prueba
//version = 'Miguel guzman' // TRABAJADOR
//version = 'Daniel Romero'
version = 'freedarwuin'
//version= 'bomdiggidy '
//version = 'louisenyel_00128'
sourceCompatibility = "11"

task FatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.example.Main'
    }
    baseName = 'ElGuasonPluginV1'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task PiggyJar(type: Jar) {
    manifest {
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

subprojects {
    tasks.withType(Jar) {
        doLast {
            copy {
                from("./build/libs/")
                into("../release/")
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            credentials {
                username 'admin'
                password 'password'
            }
            url "http://baseUrl/artifactory/libs-release-local"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
targetCompatibility = JavaVersion.VERSION_11
